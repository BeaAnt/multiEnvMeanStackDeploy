name: multiEnv

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  #first job build frontend application
  build_frontend:
    runs-on: ubuntu-latest
    steps:
    - name: checkout the files
      uses: actions/checkout@v3
    - name: use node.js
      uses: actions/setup-node@v3
      with:
        node-version: 14
    - name: npm install and build
      run: |
        cd frontend
        npm install
        npm run build
    - name: Upload artifact for deployment job
      if: success()
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: frontend/dist
        
  #second job deploy backend in development environment
  deploy_backend:
    runs-on: ubuntu-latest
    environment: DEV
    needs: build_frontend
    steps:

    - name: Checkout the files
      uses: actions/checkout@v1   


    # Your SSH step
    - name: Run sshpass commands
      uses: matheusvanzan/sshpass-action@v2
      with:
        host: ${{ secrets.HOST_DNS_DEV }}
        user: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY_DEV }}
        run: |
          cp -r backend $HOST_USER@$SERVER_IP:$TARGET_BACKEND
          cd /var/www/multiEnvMeanStackDeploy/backend
          npm install
          pm2 start server.js
            
          
    env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY_DEV}}
        SERVER_IP: ${{secrets.HOST_DNS_DEV}}
        HOST_USER: ${{secrets.USERNAME}}
        TARGET_BACKEND: ${{secrets.TARGET_PATH_B}}
        
  #third job deploy_to_DEV
  deploy_frontend:
    runs-on: ubuntu-latest
    needs: build_frontend
    environment: DEV
    steps:
    - name: Checkout the files
      uses: actions/checkout@v1
      
    - name: Download build
      uses: actions/download-artifact@v1
      with:
        name: dist

    - name: Deploy frontend in development environment
      run: |
          which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y  )
          which rsync || ( apt-get update -y && apt-get install rsync -y )
          eval $(ssh-agent -s)
          ssh-add <(echo "$SSH_PRIVATE_KEY" )
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          scp -r dist $HOST_USER@$SERVER_IP:$TARGET_FRONTEND
        
    env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY_DEV}}
        SERVER_IP: ${{secrets.HOST_DNS_DEV}}
        HOST_USER: ${{secrets.USERNAME}}
        TARGET_FRONTEND: ${{secrets.TARGET_PATH_F}}
        
  


    
